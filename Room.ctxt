#BlueJ class context
comment0.target=Room
comment0.text=\n\ Class\ Room\ -\ a\ room\ in\ an\ adventure\ game.\n\n\ This\ class\ is\ part\ of\ the\ "Zuul\ Station"\ application.\ \n\ "Zuul\ Station"\ is\ a\ simple,\ text\ based\ adventure\ game.\ \ \n\n\ A\ "Room"\ represents\ one\ location\ in\ the\ scenery\ of\ the\ game.\ \ It\ is\ \n\ connected\ to\ other\ rooms\ via\ exits.\ \ For\ each\ existing\ exit,\ the\ room\ \n\ stores\ a\ reference\ to\ the\ neighboring\ room.\ There\ are\ also\ items\ in\n\ room\ which\ can\ be\ picked\ up\ and\ dropped,\ adding\ and\ removing\ them\ \n\ from\ the\ room\ respectively.\n\ \n\ @author\ \ Michael\ K\u00F6lling\ and\ David\ J.\ Barnes\n\ @version\ 2016.02.29\n\ \n\ Extended\ and\ edited\ by\ Harry\ Tennent\ 25/11/18.\n
comment1.params=description
comment1.target=Room(java.lang.String)
comment1.text=\n\ Create\ a\ room\ described\ "description".\ Initially,\ it\ has\n\ no\ exits.\ "description"\ is\ something\ like\ "a\ kitchen"\ or\n\ "an\ open\ court\ yard".\n\ @param\ description\ The\ room's\ description.\n
comment10.params=
comment10.target=java.util.ArrayList\ getExits()
comment10.text=\n\ Return\ an\ array\ list\ of\ all\ the\ exits\ in\ the\ room.\n\ @return\ Array\ list\ of\ the\ room's\ exits.\n
comment11.params=room
comment11.target=void\ setPreviousRoom(Room)
comment11.text=\n\ Store\ the\ previous\ room\ the\ player\ was\ in.\n\ @param\ room\ Previous\ room\ object.\n
comment12.params=
comment12.target=Room\ getPreviousRoom()
comment12.text=\n\ Return\ the\ previous\ room\ the\ player\ was\ in.\n\ @return\ Previous\ room\ object.\n
comment13.params=
comment13.target=boolean\ hasCodes()
comment2.params=itemNumber
comment2.target=void\ createRoomItems(int)
comment2.text=\n\ Given\ a\ max\ number\ of\ items\ for\ the\ room,\ create\ a\ random\ number\n\ of\ items\ and\ add\ them\ to\ the\ room.\n\ @param\ itemNumber\ Max\ number\ of\ items.\n
comment3.params=item
comment3.target=void\ removeItemFromRoom(java.lang.String)
comment3.text=\n\ Remove\ item\ from\ room.\n\ @param\ item\ Item\ to\ remove.\n
comment4.params=itemName
comment4.target=void\ returnItemToRoom(java.lang.String)
comment4.text=\n\ Put\ item\ back\ into\ the\ room.\n\ @param\ itemName\ Name\ of\ item\ to\ add\ back.\n
comment5.params=direction\ neighbor
comment5.target=void\ setExit(java.lang.String,\ Room)
comment5.text=\n\ Define\ an\ exit\ from\ this\ room.\n\ @param\ direction\ The\ direction\ of\ the\ exit.\n\ @param\ neighbor\ \ The\ room\ to\ which\ the\ exit\ leads.\n
comment6.params=
comment6.target=java.lang.String\ getShortDescription()
comment6.text=\n\ @return\ The\ short\ description\ of\ the\ room\n\ (the\ one\ that\ was\ defined\ in\ the\ constructor).\n
comment7.params=charactersInRoom
comment7.target=java.lang.String\ getLongDescription(java.lang.String)
comment7.text=\n\ Return\ a\ description\ of\ the\ room\ in\ the\ form\:\n\ \ \ \ \ You\ are\ in\ the\ kitchen.\n\ \ \ \ \ Exits\:\ north\ west\n\ \ \ \ \ Items\ in\ the\ room\:\ banana\n\ \ \ \ \ Characters\ in\ the\ room\:\ PrivateRyan\n\ @return\ A\ long\ description\ of\ this\ room\n
comment8.params=
comment8.target=java.lang.String\ getExitString()
comment8.text=\n\ Return\ a\ string\ describing\ the\ room's\ exits,\ for\ example\n\ "Exits\:\ north\ west".\n\ @return\ Details\ of\ the\ room's\ exits.\n
comment9.params=direction
comment9.target=Room\ getExit(java.lang.String)
comment9.text=\n\ Return\ the\ room\ that\ is\ reached\ if\ we\ go\ from\ this\ room\ in\ direction\n\ "direction".\ If\ there\ is\ no\ room\ in\ that\ direction,\ return\ null.\n\ @param\ direction\ The\ exit's\ direction.\n\ @return\ The\ room\ in\ the\ given\ direction.\n
numComments=14
